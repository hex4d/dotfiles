[[plugins]]
repo = 'Shougo/dein.vim'

#[[plugins]]
#repo = 'thinca/vim-quickrun'
#hook_add = '''
  #nnoremap <Space>r :QuickRun<CR>
  #let g:quickrun_config = get(g:, 'quickrun_config', {})
  #let g:quickrun_config._ = {
        #\ 'runner'    : 'vimproc',
        #\ }
  #let g:quickrun_config.python = {
        #\ 'command' : 'python3',
        #\ 'cmdopt' : '-iu',
        #\ }

#'''
#hook_post_update = '''
  #let g:quickrun_config = {'*': {'hook/time/enable': '1'},}
#'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  let g:lightline = {
        \   'colorscheme': 'wombat'
        \}
  '''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]] # solarized
repo = 'altercation/vim-colors-solarized'
hook_add = '''
  set background=dark
  " colorscheme 設定は source 後に行う必要があるので VimEnter で行う。
  " 但し Colorscheme イベントの発生が抑制されないよう nented を付ける。
  
  if !has('mac')
    let g:solarized_termcolors=256
  endif
  au MyAutoCmd VimEnter * nested colorscheme solarized
'''

[[plugins]]
repo = 'jacoborus/tender.vim'
hook_add = '''
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
'''


[[plugins]] # terminal
repo = 'kassio/neoterm'
if = "has('nvim')"
hook_add = '''
  nnoremap <silent> ,rc :TREPLSendFile<cr>
  nnoremap <silent> ,rl :TREPLSendLine<cr>
  vnoremap <silent> ,rl :TREPLSendSelection<cr>
  nnoremap <Space>vp :T cd %:h; clear;<CR>
  nnoremap <Space>r :T cd %:h; clear; python3 -iu %<CR>
  nnoremap <Space>vw :T cd ~/Documents/Workspace/<CR>
  nnoremap <Space>vo :Ttoggle<CR>
  let g:neoterm_autoinsert = 1
  let g:neoterm_open_in_all_tabs = 0

'''

[[plugins]]
repo = 'Shougo/vimshell'
if = "!has('nvim')"
hook_add = '''
  " source ~/.config/nvim/plugins/neoterm.rc.vim
'''

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'neomake/neomake'
hook_add = '''
  let g:neomake_open_list = 2
  autocmd! BufWritePost * Neomake " 保存時に実行する
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
    map <C-c><C-c> <plug>NERDCommenterToggle
'''

[[plugins]]
repo = 'Lokaltog/vim-easymotion'
hook_add = '''
  let g:EasyMotion_leader_key=";"
  let g:EasyMotion_smartcase=1
  map f <Plug>(easymotion-fl)
  map t <Plug>(easymotion-tl)
  map F <Plug>(easymotion-Fl)
  map T <Plug>(easymotion-Tl)

  nmap s <Plug>(easymotion-s)
  xmap s <Plug>(easymotion-s)
  omap s <Plug>(easymotion-t)

  nmap g/ <Plug>(easymotion-sn)
  xmap g/ <Plug>(easymotion-sn)
  omap g/ <Plug>(easymotion-tn)

  let g:EasyMotion_enter_jump_first = 1
  let g:EasyMotion_space_jump_first = 1

  let g:EasyMotion_use_upper = 1
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'

[[plugins]]
repo = 'michaeljsmith/vim-indent-object'

[[plugins]]
repo = 'raimondi/delimitmate'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <Space>e :NERDTreeToggle %:h<CR>
"nnoremap <Space>e :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'ivalkeen/nerdtree-execute'

[[plugins]]
repo = 'moznion/hateblo.vim'
